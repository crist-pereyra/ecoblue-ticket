{"version":3,"sources":["firebase/config.js","comps/TicketGrid.js","comps/Title.js","context/AppReducer.js","context/GlobalState.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","num","TicketGrid","onSubmit","tipo","collectionRef","collection","estado","fecha","add","upload","type","Title","className","state","action","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","App","ReactDOM","render","document","getElementById"],"mappings":"2MAaAA,IAASC,cATY,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKYP,IAASQ,UAAhC,IACMC,EAAmBT,IAASU,YAC5BC,EAAYX,IAASU,UAAUE,WAAWC,gB,OCf5CC,EAAM,EA+BKC,EA9BI,WAqBf,OACI,+BACI,sBAAMC,SAtBC,SAACC,GACZ,IAAMC,EAAgBT,EAAiBU,WAAW,UAC5CC,EAAS,YACTC,EAAQV,IACd,GAAY,SAATM,EAAgB,CACfH,GAAO,EAEPI,EAAcI,IAAI,CAAEF,SAAQC,QAAOP,MAAKG,KAD3B,WAGZ,GAAY,eAATA,EAAsB,CAC1BH,GAAO,EAEPI,EAAcI,IAAI,CAAEF,SAAQC,QAAOP,MAAKG,KAD3B,WAGZ,GAAY,WAATA,EAAkB,CACtBH,GAAO,EAEPI,EAAcI,IAAI,CAAEF,SAAQC,QAAOP,MAAKG,KAD3B,OAMGM,CAAO,cAAvB,SACI,wBAAQC,KAAK,SAAb,6BCjBDC,EARD,WACV,OACI,qBAAKC,UAAU,QAAf,SACI,4C,wBCLG,WAACC,EAAOC,GACnB,OAAQA,EAAOJ,MACX,IAAK,qBACD,kCACOG,GADP,IAEIE,aAAcF,EAAME,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOJ,EAAOK,aAEzF,IAAK,kBACD,kCACON,GADP,IAEIE,aAAa,CAAED,EAAOK,SAAV,mBAAsBN,EAAME,iBAEhD,QACI,OAAOF,ICVbO,EAAe,CACjBL,aAAc,IAELM,EAAgBC,wBAAcF,GAE9BG,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC5B,EAA0BC,qBAAWC,EAAYN,GAAjD,mBAAOP,EAAP,KAAcc,EAAd,KASA,OAAQ,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CACnCd,aAAcF,EAAME,aACpBe,kBATJ,SAA2BZ,GACvBS,EAAS,CAAEjB,KAAM,qBAAsBS,QAASD,KAShDa,eAPJ,SAAwBd,GACpBU,EAAS,CAAEjB,KAAM,kBAAmBS,QAASF,MAGzC,SAKHO,KCNMQ,MAXf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,qBAAKpB,UAAU,YAAf,SACE,cAAC,EAAD,UCPRqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.42157e5a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n // Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAN9OkPm7x5j4i5pJhQ-Rrkiijiudg1dZ8\",\n    authDomain: \"ecoblu-ticket.firebaseapp.com\",\n    projectId: \"ecoblu-ticket\",\n    storageBucket: \"ecoblu-ticket.appspot.com\",\n    messagingSenderId: \"176148371388\",\n    appId: \"1:176148371388:web:97b3a2f5cf525294fbbdb9\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n//projectFirestore.settings({timestampSnapshot: true});\n\nexport { projectStorage, projectFirestore, timestamp };","import React from 'react';\nimport { projectFirestore, timestamp } from '../firebase/config';\nvar num = 0;\nconst TicketGrid = () => {\n    const upload = (tipo) =>{\n        const collectionRef = projectFirestore.collection('ticket');\n        const estado = 'En espera';\n        const fecha = timestamp();\n        if(tipo === 'caja'){\n            num += 1;\n            const tipo = \"C\";\n            collectionRef.add({ estado, fecha, num, tipo });\n        }\n        else if(tipo === 'plataforma'){\n            num += 1;\n            const tipo = 'P'\n            collectionRef.add({ estado, fecha, num, tipo });\n        }\n        else if(tipo === 'ventas'){\n            num += 1;\n            const tipo = 'V'\n            collectionRef.add({ estado, fecha, num, tipo });\n        }\n    }\n    return (\n        <main>\n            <form onSubmit={upload('plataforma')}>\n                <button type=\"submit\">Plataforma</button>\n            </form>\n        </main>\n    )\n}\n\nexport default TicketGrid\n","import React from 'react';\n\nconst Title = () => {\n    return (\n        <div className=\"title\">\n            <h1>Ecoblue</h1>\n        </div>\n    )\n}\n\nexport default Title;","export default (state, action) => {\n    switch (action.type) {\n        case 'DELETE_TRANSACTION':\n            return{\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions ]\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialState = {\n    transactions: []\n}\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n    //Actions\n    function deleteTransaction(id) {\n        dispatch({ type: 'DELETE_TRANSACTION', payload: id });\n    }\n    function addTransaction(transaction) {\n        dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}","import './App.css';\nimport TicketGrid from './comps/TicketGrid';\nimport Title  from './comps/Title';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Title />\n      <div className=\"container\">\n        <TicketGrid />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}